.mindmap-node {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center; /* Align children (headshot and info) in the center */
    justify-content: center; /* Center everything vertically within the node */
    transition: top 0.5s ease, left 0.5s ease, transform 0.5s ease;
    width: 2vw; /* 10% of the viewport width */
    height: auto; /* 15% of the viewport height */
  }
  
  .mindmap-node .headshot-small {
    width: clamp(30px, 4vw, 90px); /* Minimum size, preferred size based on viewport width, maximum size */
    height: clamp(30px, 4vw, 90px); /* Ensure the width and height are the same for circular icons */
    border-radius: 50%; /* Makes the image rounded */
    transition: transform 0.3s ease;
  }
  .mindmap-node .headshot-medium {
    width: clamp(40px, 5vw, 100px); /* Minimum size, preferred size based on viewport width, maximum size */
    height: clamp(40px, 5vw, 100px); /* Ensure the width and height are the same for circular icons */
    border-radius: 50%; /* Makes the image rounded */
    transition: transform 0.3s ease;
  }
  .mindmap-node .headshot-large {
    width: clamp(50px, 6vw, 110px); /* Minimum size, preferred size based on viewport width, maximum size */
    height: clamp(50px, 6vw, 110px); /* Ensure the width and height are the same for circular icons */
    border-radius: 50%; /* Makes the image rounded */
    transition: transform 0.3s ease;
  }
  .mindmap-node .headshot-xlarge {
    width: clamp(60px, 7vw, 120px); /* Minimum size, preferred size based on viewport width, maximum size */
    height: clamp(60px, 7vw, 120px); /* Ensure the width and height are the same for circular icons */
    border-radius: 50%; /* Makes the image rounded */
    transition: transform 0.3s ease;
  }
  .headshot {
    border-radius: 50%; /* Makes the image rounded */
    transition: transform 0.3s ease;
}

  .mindmap-node:hover .headshot {
    transform: scale(1.3);
  }
  
  .mindmap-node .info {
    display: flex; /* Change to none initially if you want it hidden */
    flex-direction: column; /* Aligns children (h3, p) in a row */
    align-items: center; /* Align children (headshot and info) in the center */
    justify-content: center; /* Center everything vertically within the node */
    width: 100%; /* Full width of the container */
  }
  
  .mindmap-node .info h3{
    font-size: clamp(12px, 1.1vw, 22px); /* Minimum size, preferred size, maximum */
    align-items: center;
    text-align: center;
    white-space: nowrap; /* Prevents text wrapping */
    flex-direction: column; /* Aligns children (h3, p) in a row */
    animation: fadeIn 3.3s;
  }
  .mindmap-node .info p {
    font-size: clamp(10px, 1.0vw, 20px); /* Adjust these values as necessary */
    align-items: center;
    text-align: center;
    white-space: nowrap; /* Prevents text wrapping */
    flex-direction: column; /* Aligns children (h3, p) in a row */
    animation: fadeIn 3.3s;
  }
  .mindmap-node .linkedin-link {
    color: #0077B5; /* LinkedIn's brand color */
    text-decoration: none;
    margin-top: 0vh;
    font-size: 1.0vw; /* Relative to viewport width */
    animation: fadeIn 3.3s;
  }
  @media (max-width: 768px) {
    .mindmap-node {
      width: 4vw;
    }
  
    .mindmap-node .info h3 {
      font-size: 1.2vw;
    }
  
    .mindmap-node .info p {
      font-size: 1.0vw;
    }
  
    .mindmap-node .linkedin-link {
      font-size: 1.2vw;
    }
  }
  
  @media (max-width: 480px) {
    .mindmap-node {
      width: 4vw;
    }
  
    .mindmap-node .info h3 {
        font-size: 1.2vw;
    }

    .mindmap-node .info p {
        font-size: 1.0vw;
    }

    .mindmap-node .linkedin-link {
        font-size: 1.2vw;
    }
  }
  @media (min-width: 1200px) {
    .mindmap-node .info h3 {
        font-size: 18px; /* Fixed size for very large screens */
    }

    .mindmap-node .info p, .mindmap-node .linkedin-link {
        font-size: 16px; /* Fixed size for very large screens */
    }

    .title, .svg-title {
        font-size: 35px; /* Larger fixed size for titles on big screens */
    }
}
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }